on:
  workflow_dispatch:
    inputs:
      cpython_branch:
        description: "Branch to checkout for python/cpython GitHub repository (ie '3.11' or 'main')"
        type: string
      cpython_release:
        description: "Prospective release number for CPython (ie '3.11.5' or '3.12.0rc2' without the 'v' prefix)"
        type: string

name: "Build Python source artifacts"

jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
      hashes: ${{ steps.hashes.outputs.hashes }}
    steps:
      - name: "Checkout python/release-tools"
        uses: actions/checkout@v3

      - name: "Checkout python/cpython"
        uses: actions/checkout@v3
        with:
          repository: "python/cpython"
          ref: "${{ inputs.cpython_branch }}"
          path: "cpython"

      - name: "Setup Python"
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: "Install dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends \
            latexmk texlive-xetex xindy texinfo texlive-latex-base \
            texlive-fonts-recommended texlive-fonts-extra \
            texlive-full

          python -m pip install --only-binary=:all: --no-deps -r requirements.txt
          python -m pip install -r cpython/Doc/requirements.txt

      - name: "Prepare for release"
        run: |
          # Configure github-actions[bot] identity in Git.
          # The data for the commit isn't used anywhere by the build.
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          cd cpython
          python -m blurb release ${{ inputs.cpython_release }}
          git commit -m "Python ${{ inputs.cpython_release }}"

          EDITOR=cat python ../release.py --bump ${{ inputs.cpython_release }}
          git commit -a --amend --no-edit

          cd Doc
          make pydoc-topics
          cp build/pydoc-topics/topics.py ../Lib/pydoc_data/topics.py
          cd ..
          git commit -a --amend --no-edit

          git tag -a v${{ inputs.cpython_release }} -m "Python ${{ inputs.cpython_release }}"
          git diff HEAD~1 HEAD > ${{ inputs.cpython_release }}.patch

      - name: "Build Python source tarballs"
        run: |
          cd cpython
          python ../release.py --export ${{ inputs.cpython_release }}

      - name: "Generate hashes"
        id: hashes
        run: |
          # Move the .patch file so that it's in the same directory
          # as the rest of the built artifacts.
          mv cpython/${{ inputs.cpython_release }}.patch \
             cpython/${{ inputs.cpython_release }}/${{ inputs.cpython_release }}.patch

          cd cpython/${{ inputs.cpython_release }} && echo "hashes=$(sha256sum ${{ inputs.cpython_release }}.patch docs/* src/* | base64 -w0)" >> $GITHUB_OUTPUT

      - name: "Upload the artifacts"
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            cpython/${{ inputs.cpython_release }}/${{ inputs.cpython_release }}.patch
            cpython/${{ inputs.cpython_release }}/src
            cpython/${{ inputs.cpython_release }}/docs

  provenance:
    needs: [build]
    permissions:
      actions: read
      contents: write
      id-token: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.9.0
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      provenance-name: "artifacts.intoto.jsonl"
