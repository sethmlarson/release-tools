on:
  workflow_dispatch:
    inputs:
      git_remote:
        type: choice
        description: "Git remote to checkout"
        options:
          - python
          - Yhg1s
          - pablogsal
          - ambv
      git_commit:
        type: string
        description: "Git commit to target for the release. Must use the full commit SHA, not the short ID"
      cpython_release:
        type: string
        description: "CPython release number (ie '3.11.5', note without the 'v' prefix)"

name: "Build Python source artifacts"

jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
      hashes: ${{ steps.hashes.outputs.hashes }}
    steps:
      - name: "Checkout python/release-tools"
        uses: actions/checkout@v3

      - name: "Checkout ${{ inputs.git_remote }}/cpython"
        uses: actions/checkout@v3
        with:
          repository: "${{ inputs.git_remote }}/cpython"
          ref: "v${{ inputs.cpython_release }}"
          path: "cpython"

      - name: "Verify CPython commit matches tag"
        run: |
          if [[ "${{ inputs.git_commit }}" != "$(cd cpython && git rev-parse HEAD)" ]]; then
            echo "expected git commit ('${{ inputs.git_commit }}') didn't match tagged commit ('$(git rev-parse HEAD)')"
            exit 1
          fi

      - name: "Setup Python"
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: "Install dependencies"
        run: |
          python -m pip install --only-binary=:all: --no-deps \
            -r requirements.txt \
            -r cpython/Doc/requirements.txt

          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends \
            latexmk texlive-xetex xindy texinfo texlive-latex-base \
            texlive-fonts-recommended texlive-fonts-extra \
            texlive-full

      - name: "Build Python source tarballs"
        run: |
          cd cpython
          python ../release.py --export ${{ inputs.cpython_release }}

      - name: "Generate hashes"
        id: hashes
        run: |
          cd cpython/${{ inputs.cpython_release }} && echo "hashes=$(sha256sum docs/* src/* | base64 -w0)" >> $GITHUB_OUTPUT

      - name: "Upload the artifacts"
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            cpython/${{ inputs.cpython_release }}/src
            cpython/${{ inputs.cpython_release }}/docs

  provenance:
    needs: [build]
    permissions:
      actions: read
      contents: write
      id-token: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.9.0
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      provenance-name: "artifacts.intoto.jsonl"
